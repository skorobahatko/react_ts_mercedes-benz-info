[{"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\index.tsx":"1","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\reportWebVitals.ts":"2","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\app\\App.tsx":"3","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\store\\index.ts":"4","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\store\\reducers.ts":"5","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\store\\actions.ts":"6","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\store\\store.ts":"7","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\models\\index.ts":"8","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\utils\\index.ts":"9","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\models\\interfaces.ts":"10","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\utils\\api.ts":"11","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\header\\Header.tsx":"12","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\home-page\\HomePage.tsx":"13","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-cards-list\\index.ts":"14","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\store\\storeTemplates.ts":"15","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\characters-page\\index.ts":"16","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\character-self-page\\index.ts":"17","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\character-self-page\\CharacterSelfPage.tsx":"18","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-cards-list\\SelfCharactersCardsList.tsx":"19","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-cards-list\\SelfLocationsCardsList.tsx":"20","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-cards-list\\SelfEpisodesCardsList.tsx":"21","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-card\\EpisodeSelfCard.tsx":"22","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-card\\CharacterSelfCard.tsx":"23","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-card\\index.ts":"24","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-card\\LocationSelfCard.tsx":"25","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\characters-page\\CharacterPage.tsx":"26","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\episodes-page\\index.ts":"27","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\episodes-page\\EpisodesPage.tsx":"28","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\location-page\\index.ts":"29","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\location-page\\LocationPage.tsx":"30","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\carousel-item\\index.ts":"31","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\carousel-item\\CarouselItem.tsx":"32","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\location-self-window\\index.ts":"33","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\location-self-window\\LocationWindow.tsx":"34","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\header\\index.ts":"35","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\episode-self-window\\index.ts":"36","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\episode-self-window\\EpisodeWindow.tsx":"37","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\search-page\\index.ts":"38","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\search-page\\SearchPage.tsx":"39"},{"size":534,"mtime":1612902861972,"results":"40","hashOfConfig":"41"},{"size":440,"mtime":1612902800260,"results":"42","hashOfConfig":"41"},{"size":1702,"mtime":1613433104846,"results":"43","hashOfConfig":"41"},{"size":81,"mtime":1612902861973,"results":"44","hashOfConfig":"41"},{"size":3095,"mtime":1613085356191,"results":"45","hashOfConfig":"41"},{"size":3313,"mtime":1613299024084,"results":"46","hashOfConfig":"41"},{"size":215,"mtime":1612979326009,"results":"47","hashOfConfig":"41"},{"size":29,"mtime":1612902861972,"results":"48","hashOfConfig":"41"},{"size":22,"mtime":1612902861974,"results":"49","hashOfConfig":"41"},{"size":4380,"mtime":1613299199771,"results":"50","hashOfConfig":"41"},{"size":3696,"mtime":1613299865853,"results":"51","hashOfConfig":"41"},{"size":712,"mtime":1613433020528,"results":"52","hashOfConfig":"41"},{"size":1837,"mtime":1613430688376,"results":"53","hashOfConfig":"41"},{"size":127,"mtime":1612996070531,"results":"54","hashOfConfig":"41"},{"size":2061,"mtime":1612986733911,"results":"55","hashOfConfig":"41"},{"size":32,"mtime":1612996941297,"results":"56","hashOfConfig":"41"},{"size":36,"mtime":1612989867641,"results":"57","hashOfConfig":"41"},{"size":1471,"mtime":1613085387727,"results":"58","hashOfConfig":"41"},{"size":536,"mtime":1613431465891,"results":"59","hashOfConfig":"41"},{"size":1045,"mtime":1613299975632,"results":"60","hashOfConfig":"41"},{"size":1018,"mtime":1613297176933,"results":"61","hashOfConfig":"41"},{"size":611,"mtime":1613299718604,"results":"62","hashOfConfig":"41"},{"size":676,"mtime":1613431640453,"results":"63","hashOfConfig":"41"},{"size":109,"mtime":1612996534440,"results":"64","hashOfConfig":"41"},{"size":622,"mtime":1613299062639,"results":"65","hashOfConfig":"41"},{"size":1950,"mtime":1613085700699,"results":"66","hashOfConfig":"41"},{"size":31,"mtime":1612997860057,"results":"67","hashOfConfig":"41"},{"size":2051,"mtime":1613085714796,"results":"68","hashOfConfig":"41"},{"size":30,"mtime":1612998795526,"results":"69","hashOfConfig":"41"},{"size":2145,"mtime":1613296095477,"results":"70","hashOfConfig":"41"},{"size":30,"mtime":1613002170068,"results":"71","hashOfConfig":"41"},{"size":337,"mtime":1613004066937,"results":"72","hashOfConfig":"41"},{"size":33,"mtime":1613082131055,"results":"73","hashOfConfig":"41"},{"size":2484,"mtime":1613313358242,"results":"74","hashOfConfig":"41"},{"size":25,"mtime":1612912984722,"results":"75","hashOfConfig":"41"},{"size":32,"mtime":1613086130539,"results":"76","hashOfConfig":"41"},{"size":2296,"mtime":1613313952645,"results":"77","hashOfConfig":"41"},{"size":29,"mtime":1613432885845,"results":"78","hashOfConfig":"41"},{"size":2511,"mtime":1613436708994,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"owsc1l",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\index.tsx",[],["165","166"],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\reportWebVitals.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\app\\App.tsx",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\store\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\store\\reducers.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\store\\actions.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\store\\store.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\models\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\utils\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\models\\interfaces.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\utils\\api.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\header\\Header.tsx",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\home-page\\HomePage.tsx",["167"],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-cards-list\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\store\\storeTemplates.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\characters-page\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\character-self-page\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\character-self-page\\CharacterSelfPage.tsx",["168"],"import { useEffect } from \"react\";\r\nimport { useStore, useDispatch, useSelector } from \"react-redux\"\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { GlobalStore } from \"../../models\";\r\nimport { characterActions } from '../../store';\r\nimport { api } from '../../utils';\r\nimport { ApiRoutesEnum } from '../../models';\r\n\r\nconst CharacterSelfPage: React.FC = () => {\r\n  const store = useStore();\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const existsCharacters: GlobalStore = store.getState();\r\n  const { characters: {allCharacters} } = existsCharacters;\r\n  const id = location.pathname.split('/')[location.pathname.split('/').length - 1];\r\n  const isCharacterExists = allCharacters.results.find((el) => el.id === +id)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const res = await api.getOneCharacter(`${ApiRoutesEnum.getCh}/${+id}`);\r\n      if (res) {\r\n        dispatch(characterActions.setOneCharacter(res));\r\n      }\r\n    }\r\n    if (!allCharacters.results.length && !isCharacterExists) {\r\n      fetchData();\r\n    }\r\n  }, [])\r\n  const oneCharacter = useSelector((state: GlobalStore) => state.characters.oneCharacter);\r\n  console.log(oneCharacter);\r\n  const character = isCharacterExists ? isCharacterExists : oneCharacter;\r\n  if (character.id === 0) {\r\n    return (<div>wait</div>)\r\n  }\r\n  console.log(character)\r\n\r\n  return (\r\n    <div>self page of {character.name}</div>\r\n  )\r\n}\r\nexport { CharacterSelfPage };","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-cards-list\\SelfCharactersCardsList.tsx",["169"],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-cards-list\\SelfLocationsCardsList.tsx",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-cards-list\\SelfEpisodesCardsList.tsx",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-card\\EpisodeSelfCard.tsx",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-card\\CharacterSelfCard.tsx",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-card\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\self-card\\LocationSelfCard.tsx",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\characters-page\\CharacterPage.tsx",["170"],"import { useEffect } from 'react';\r\nimport { SelfCharactersCardsList } from '../self-cards-list';\r\nimport { ApiRoutesEnum, GlobalStore } from '../../models';\r\nimport { api } from '../../utils';\r\nimport { characterActions } from '../../store';\r\nimport './styles.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Header } from '../header';\r\n\r\n\r\nconst CharacterCardsPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const allCharacters = useSelector((state: GlobalStore) => state.characters.allCharacters);\r\n  const totalPages = useSelector((state: GlobalStore) => state.characters.allCharacters.info.pages);\r\n  const location = useLocation();\r\n  \r\n  const currentPage = +location.pathname.split('page=')[1];\r\n  console.log(location);\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const res = await api.getAllCharacters(ApiRoutesEnum.getCh, currentPage);\r\n\r\n      if (res) {\r\n        dispatch(characterActions.setAllCharacters(res));\r\n      }\r\n    }\r\n    if (!allCharacters.results.length) {\r\n      fetchData();\r\n    }\r\n  }, [currentPage])\r\n\r\n  if (!allCharacters.results.length) {\r\n    return (\r\n      <div className=\"spinner-border\" role=\"status\">\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className = 'container-fluid'>\r\n        <Header/>\r\n        <SelfCharactersCardsList arr={allCharacters.results}/>\r\n        <Pagination>\r\n          <Pagination.First href={`/characters/page=1`}/>\r\n          <Pagination.Prev href={`/characters/page=${(currentPage - 1) === 0 ? currentPage : currentPage - 1}`}/>\r\n          <Pagination.Item active>{currentPage}</Pagination.Item>\r\n          <Pagination.Next href={`/characters/page=${currentPage + 1}`}/>\r\n          <Pagination.Last href={`/characters/page=${totalPages}`}/>\r\n        </Pagination>\r\n    </div>\r\n  )\r\n}\r\nexport { CharacterCardsPage };","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\episodes-page\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\episodes-page\\EpisodesPage.tsx",["171"],"import { useEffect } from 'react';\r\nimport { SelfEpisodesCardsList } from '../self-cards-list';\r\nimport { ApiRoutesEnum, GlobalStore } from '../../models';\r\nimport { api } from '../../utils';\r\nimport { episodesActions } from '../../store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Header } from '../header';\r\n\r\n\r\nconst EpisodesCardsPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const allEpisodes = useSelector((state: GlobalStore) => state.episode.allEpisodes);\r\n  const totalPages = useSelector((state: GlobalStore) => state.episode.allEpisodes.info.pages);\r\n  // const pageFromStore = useSelector((state: GlobalStore) => state.characters.page);\r\n  const location = useLocation();\r\n  \r\n  const currentPage = +location.pathname.split('page=')[1];\r\n  // const isPageNeedToReload = pageFromStore === currentPage ? false : true\r\n  console.log(location);\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const res = await api.getAllEpisodes(ApiRoutesEnum.getEp, currentPage);\r\n\r\n      if (res) {\r\n        dispatch(episodesActions.setAllEpisodes(res));\r\n      }\r\n    }\r\n    if (!allEpisodes.results.length) {\r\n      fetchData();\r\n    }\r\n  }, [currentPage])\r\n\r\n  if (!allEpisodes.results.length) {\r\n    return (\r\n      <div className=\"spinner-border\" role=\"status\">\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className = 'container-fluid'>\r\n      <Header/>\r\n        <SelfEpisodesCardsList arr={allEpisodes.results}/>\r\n        <Pagination>\r\n          <Pagination.First href={`/episodes/page=1`}/>\r\n          <Pagination.Prev href={`/episodes/page=${(currentPage - 1) === 0 ? currentPage : currentPage - 1}`}/>\r\n          <Pagination.Item active>{currentPage}</Pagination.Item>\r\n          <Pagination.Next href={`/episodes/page=${currentPage + 1}`}/>\r\n          <Pagination.Last href={`/episodes/page=${totalPages}`}/>\r\n        </Pagination>\r\n    </div>\r\n  )\r\n}\r\nexport { EpisodesCardsPage };","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\location-page\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\location-page\\LocationPage.tsx",["172"],"import { useEffect } from 'react';\r\nimport { SelfLocationsCardsList } from '../self-cards-list';\r\nimport { ApiRoutesEnum, GlobalStore } from '../../models';\r\nimport { api } from '../../utils';\r\nimport { locationActions } from '../../store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Header } from '../header';\r\n\r\nconst LocationsCardsPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const allLocations = useSelector((state: GlobalStore) => state.location.allLocations);\r\n  const totalPages = useSelector((state: GlobalStore) => state.location.allLocations.info.pages);\r\n  // const pageFromStore = useSelector((state: GlobalStore) => state.characters.page);\r\n  const location = useLocation();\r\n  console.log(allLocations);\r\n  \r\n  const currentPage = +location.pathname.split('page=')[1];\r\n  // const isPageNeedToReload = pageFromStore === currentPage ? false : true\r\n  console.log(location);\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const res = await api.getAllLocations(ApiRoutesEnum.getLc, currentPage);\r\n\r\n      if (res) {\r\n        dispatch(locationActions.setAllLocations(res));\r\n      }\r\n    }\r\n    if (!allLocations.results.length) {\r\n      fetchData();\r\n    }\r\n  }, [currentPage])\r\n\r\n  if (!allLocations.results.length) {\r\n    return (\r\n      <div className=\"spinner-border\" role=\"status\">\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className = 'container-fluid'>\r\n        <Header/>\r\n        <SelfLocationsCardsList arr={allLocations.results}/>\r\n        <Pagination>\r\n          <Pagination.First href={`/locations/page=1`}/>\r\n          <Pagination.Prev href={`/locations/page=${(currentPage - 1) === 0 ? currentPage : currentPage - 1}`}/>\r\n          <Pagination.Item active>{currentPage}</Pagination.Item>\r\n          <Pagination.Next href={`/locations/page=${(currentPage + 1) > totalPages ? totalPages : currentPage + 1}`}/>\r\n          <Pagination.Last href={`/locations/page=${totalPages}`}/>\r\n        </Pagination>\r\n    </div>\r\n  )\r\n}\r\nexport { LocationsCardsPage };","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\carousel-item\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\carousel-item\\CarouselItem.tsx",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\location-self-window\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\location-self-window\\LocationWindow.tsx",["173","174","175"],"import { Carousel, CarouselItem } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ApiRoutesEnum, GlobalStore } from '../../models';\r\nimport { useEffect } from \"react\";\r\nimport { api } from \"../../utils\";\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport { characterActions, locationActions } from '../../store';\r\nimport { SelfCharactersCardsList } from \"../self-cards-list\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search)\r\n\r\nconst LocationWindow: React.FC = () => {\r\n\r\n  const url = useQuery().get('id');\r\n  const dispatch = useDispatch();\r\n  const location = useSelector((state: GlobalStore) => state.location.oneLocation);\r\n  const locationResidents = useSelector((state: GlobalStore) => state.characters.multiplyCharacters);\r\n\r\n  useEffect(() => {\r\n    async function fetchLocationData() {\r\n      const res = await api.getOneLocation(`${ApiRoutesEnum.getLc}/${url}`);\r\n      const residentsForRequest = res.residents.map((el) => {\r\n        return el.split('/character/')[1];\r\n      })\r\n      const residentsRes = await api.getMultiplyCharacters(`${ApiRoutesEnum.getCh}/${residentsForRequest}`)\r\n      \r\n      if (res) {\r\n        dispatch(locationActions.setOneLocation(res));\r\n      }\r\n      if (residentsRes) {\r\n        dispatch(characterActions.setMultiplyCharacters(residentsRes));\r\n      }\r\n    }\r\n    fetchLocationData();\r\n  }, [url])\r\n  const { name, type, dimension } = location;\r\n\r\n  if (!location.id) {\r\n    return (\r\n      <div>Loading</div>\r\n      )     \r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div>\r\n        <h1>{name}</h1>\r\n        <span>Type: {type}<br/>Dimension: {dimension}<br/></span>\r\n        {/* <div className='container d-flex'> */}\r\n        <Carousel fade={true} slide={false}>\r\n      {\r\n        locationResidents && locationResidents.length ? locationResidents.map((el, index) => {\r\n          return (\r\n            <Carousel.Item>\r\n              <img src={el.image} alt={el.name} key={index}/>\r\n              <Carousel.Caption>\r\n                <Link to={`/characters/${el.id}`} style={{textDecoration: 'none', color: 'white'}}><h3>{el.name}</h3></Link>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          )\r\n        }) : <span>There is no residents</span>\r\n      }\r\n      </Carousel>\r\n      {/* </div> */}\r\n      </div>\r\n\r\n      {/* <SelfCharactersCardsList arr={locationResidents}/> */}\r\n    </div>\r\n  )\r\n}\r\nexport { LocationWindow };","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\header\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\episode-self-window\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\episode-self-window\\EpisodeWindow.tsx",["176"],"import { Carousel } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ApiRoutesEnum, GlobalStore } from '../../models';\r\nimport { useEffect } from \"react\";\r\nimport { api } from \"../../utils\";\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport { characterActions, episodesActions } from '../../store';\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search)\r\n\r\nconst EpisodeWindow: React.FC = () => {\r\n\r\n  const url = useQuery().get('id');\r\n  const dispatch = useDispatch();\r\n  const oneEpisode = useSelector((state: GlobalStore) => state.episode.oneEpisode);\r\n  const episodeCharacters = useSelector((state: GlobalStore) => state.characters.multiplyCharacters);\r\n\r\n  useEffect(() => {\r\n    async function fetchLocationData() {\r\n      const res = await api.getOneEpisode(`${ApiRoutesEnum.getEp}/${url}`);\r\n      const residentsForRequest = res.characters.map((el) => {\r\n        return el.split('/character/')[1];\r\n      })\r\n      const residentsRes = await api.getMultiplyCharacters(`${ApiRoutesEnum.getCh}/${residentsForRequest}`)\r\n      \r\n      if (res) {\r\n        dispatch(episodesActions.setOneEpisode(res));\r\n      }\r\n      if (residentsRes) {\r\n        dispatch(characterActions.setMultiplyCharacters(residentsRes));\r\n      }\r\n    }\r\n    fetchLocationData();\r\n  }, [url])\r\n  const { name, air_date, episode } = oneEpisode;\r\n\r\n  if (!oneEpisode.id) {\r\n    return (\r\n      <div>Loading</div>\r\n      )     \r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div>\r\n        <h1>{name}</h1>\r\n        <span>Air date: {air_date}<br/>Episode: {episode}<br/></span>\r\n        <Carousel fade={true} slide={false}>\r\n        {\r\n          episodeCharacters && episodeCharacters.length ? episodeCharacters.map((el, index) => {\r\n            return (\r\n              <Carousel.Item>\r\n                <img src={el.image} alt={el.name} key={index}/>\r\n                <Carousel.Caption>\r\n                  <Link to={`/characters/${el.id}`} style={{textDecoration: 'none', color: 'white'}}><h3>{el.name}</h3></Link>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>\r\n            )\r\n          }) : <span>There is no residents</span>\r\n        }\r\n      </Carousel>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport { EpisodeWindow };","C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\search-page\\index.ts",[],"C:\\Users\\Admin\\Documents\\work2021\\react_ts_rick_and_morty\\src\\components\\search-page\\SearchPage.tsx",["177","178","179","180"],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":33,"column":6,"nodeType":"187","endLine":33,"endColumn":8,"suggestions":"188"},{"ruleId":"185","severity":1,"message":"189","line":28,"column":6,"nodeType":"187","endLine":28,"endColumn":8,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":10,"nodeType":"193","messageId":"194","endLine":1,"endColumn":21},{"ruleId":"185","severity":1,"message":"195","line":35,"column":6,"nodeType":"187","endLine":35,"endColumn":19,"suggestions":"196"},{"ruleId":"185","severity":1,"message":"197","line":36,"column":6,"nodeType":"187","endLine":36,"endColumn":19,"suggestions":"198"},{"ruleId":"185","severity":1,"message":"199","line":36,"column":6,"nodeType":"187","endLine":36,"endColumn":19,"suggestions":"200"},{"ruleId":"191","severity":1,"message":"201","line":1,"column":20,"nodeType":"193","messageId":"194","endLine":1,"endColumn":32},{"ruleId":"191","severity":1,"message":"202","line":8,"column":10,"nodeType":"193","messageId":"194","endLine":8,"endColumn":33},{"ruleId":"185","severity":1,"message":"203","line":35,"column":6,"nodeType":"187","endLine":35,"endColumn":11,"suggestions":"204"},{"ruleId":"185","severity":1,"message":"203","line":34,"column":6,"nodeType":"187","endLine":34,"endColumn":11,"suggestions":"205"},{"ruleId":"191","severity":1,"message":"206","line":18,"column":18,"nodeType":"193","messageId":"194","endLine":18,"endColumn":30},{"ruleId":"191","severity":1,"message":"207","line":24,"column":18,"nodeType":"193","messageId":"194","endLine":24,"endColumn":29},{"ruleId":"191","severity":1,"message":"208","line":31,"column":9,"nodeType":"193","messageId":"194","endLine":31,"endColumn":17},{"ruleId":"191","severity":1,"message":"209","line":32,"column":9,"nodeType":"193","messageId":"194","endLine":32,"endColumn":17},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allCharacters.results.length', 'currentPage', and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["212"],"React Hook useEffect has missing dependencies: 'allCharacters.results.length', 'dispatch', 'id', and 'isCharacterExists'. Either include them or remove the dependency array.",["213"],"@typescript-eslint/no-unused-vars","'CardColumns' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'allCharacters.results.length' and 'dispatch'. Either include them or remove the dependency array.",["214"],"React Hook useEffect has missing dependencies: 'allEpisodes.results.length' and 'dispatch'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'allLocations.results.length' and 'dispatch'. Either include them or remove the dependency array.",["216"],"'CarouselItem' is defined but never used.","'SelfCharactersCardsList' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["217"],["218"],"'getLocations' is defined but never used.","'getEpisodes' is defined but never used.","'loctions' is assigned a value but never used.","'episodes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"219","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"228","fix":"230"},"Update the dependencies array to be: [allCharacters.results.length, currentPage, dispatch]",{"range":"231","text":"232"},"Update the dependencies array to be: [allCharacters.results.length, dispatch, id, isCharacterExists]",{"range":"233","text":"234"},{"range":"235","text":"232"},"Update the dependencies array to be: [allEpisodes.results.length, currentPage, dispatch]",{"range":"236","text":"237"},"Update the dependencies array to be: [allLocations.results.length, currentPage, dispatch]",{"range":"238","text":"239"},"Update the dependencies array to be: [dispatch, url]",{"range":"240","text":"241"},{"range":"242","text":"241"},[1000,1002],"[allCharacters.results.length, currentPage, dispatch]",[1082,1084],"[allCharacters.results.length, dispatch, id, isCharacterExists]",[1177,1190],[1295,1308],"[allEpisodes.results.length, currentPage, dispatch]",[1333,1346],"[allLocations.results.length, currentPage, dispatch]",[1413,1418],"[dispatch, url]",[1334,1339]]